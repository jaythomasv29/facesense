{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/facesenselogo.png","components/Logo/Logo.js","components/ImageInputForm/ImageInputForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","style","display","justifyContent","className","Logo","options","max","height","width","paddingTop","src","face","alt","ImageInputForm","onInputChange","onBtnSubmit","marginRight","marginLeft","onChange","type","placeholder","onClick","Rank","FaceRecognition","imageUrl","boxes","console","log","id","map","box","idx","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","generateFaceLocation","data","outputs","regions","ele","calculateFaceBox","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBoxes","setState","state","event","input","target","value","models","predict","FACE_DETECT_MODEL","then","response","catch","err","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qSAUeA,G,OAVI,WACf,OACI,qBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAe,YAA7C,SACI,oBAAIC,UAAU,2CAAd,yB,iBCHG,G,OAAA,IAA0B,2CCkB1BC,EAbF,WACT,OACI,qBAAKD,UAAU,UAAf,SAEI,cAAC,IAAD,CAAMA,UAAU,oBAAoBE,QAAS,CAAEC,IAAK,IAAMN,MAAO,CAAEO,OAAQ,IAAKC,MAAO,KAAvF,SACI,qBAAKL,UAAU,iBAAf,SACI,qBAAKH,MAAO,CAACS,WAAY,OAAQC,IAAKC,EAAMC,IAAI,gBCqBrDC,EA9BQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,YACvC,OACE,8BACE,sBAAKZ,UAAU,yBAAyBH,MAAO,CAACgB,YAAa,OAAQC,WAAY,QAAjF,UACE,mBAAGd,UAAU,WAAb,SACG,gEAEH,oBAAGA,UAAU,UAAb,wEAAkF,uBAAlF,4BAIA,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,uBAAOe,SAAUJ,EACfX,UAAU,uBACVgB,KAAK,SACLC,YAAY,mBAGd,wBACAC,QAASN,EACTZ,UAAU,sDAFV,+BCLGmB,EAhBF,WACX,OACE,gCACA,qBAAInB,UAAU,mBAAd,UAAkC,YAAlC,OACE,qBAAKA,UAAU,eAAf,SACG,mCAEH,oBAAIA,UAAU,eAAd,SACG,WCcMoB,G,OApBS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAElC,OADFC,QAAQC,IAAIF,GAER,qBAAKtB,UAAU,WAAf,SAEA,sBAAKA,UAAU,eAAf,UAEE,qBAAKO,IAAKc,EAAUI,GAAG,aAAahB,IAAI,GAAGJ,MAAM,QAAQD,OAAO,SAC/DkB,EAAMI,KAAI,SAACC,EAAKC,GACf,OAAO,qBAAK5B,UAAU,eAAeH,MAAO,CAACgC,IAAKF,EAAIG,OAAQC,MAAOJ,EAAIK,SAAUC,OAAQN,EAAIO,UAAWC,KAAMR,EAAIS,SAA7G,SACP,sBAAMpC,UAAU,UAAhB,SAA2B4B,EAAM,gB,iBCFnCS,EAAM,IAAIC,IAASC,IAAI,CAC3BC,OAAQ,qCAwEKD,E,kDApEb,aAAc,IAAD,8BACX,gBASFE,qBAAuB,SAACC,GAMtB,OALAnB,QAAQC,IAAIkB,GACUA,EAAKC,QAAQ,GAAGD,KAAKE,QAAQlB,KAAI,SAAAmB,GACrD,OAAQ,EAAKC,iBAAiBD,EAAIE,YAAYC,kBAbrC,EAmBbF,iBAAmB,SAACnB,GAClB,IAAMsB,EAAQC,SAASC,eAAe,cAChC9C,EAAQ+C,OAAOH,EAAM5C,OACrBD,EAASgD,OAAOH,EAAM7C,QAC1B,MAAO,CACLgC,QAAST,EAAI0B,SAAWhD,EACxByB,OAAQH,EAAI2B,QAAUlD,EACtB4B,SAAU3B,EAASsB,EAAI4B,UAAYlD,EACnC6B,UAAW9B,EAAUuB,EAAI6B,WAAapD,IA3B/B,EA+BbqD,iBAAmB,SAACnC,GAClB,EAAKoC,SAAS,CAACpC,MAAOA,IACtBC,QAAQC,IAAI,EAAKmC,QAjCN,EAoCbhD,cAAgB,SAACiD,GACf,EAAKF,SAAS,CAAEG,MAAOD,EAAME,OAAOC,SArCzB,EAwCbnD,YAAc,WACZ,EAAK8C,SAAS,CAACrC,SAAU,EAAKsC,MAAME,QAGpCxB,EAAI2B,OAAOC,QAAQ3B,IAAS4B,kBAAmB,EAAKP,MAAME,OACvDM,MAAK,SAAAC,GAAQ,OAAI,EAAKX,iBAAiB,EAAKhB,qBAAqB2B,IACjEC,OAAM,SAAAC,GAAG,OAAI/C,QAAQC,IAAI8C,UA3C5B,EAAKX,MAAQ,CACXE,MAAO,GACPxC,SAAU,GACVC,MAAO,IANE,E,qDAoDX,OACE,sBAAKtB,UAAU,MAAf,UACA,cAAC,IAAD,CAAWA,UAAU,eAEnB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAgBW,cAAe4D,KAAK5D,cAAeC,YAAa2D,KAAK3D,cACrE,cAAC,EAAD,CAAiBU,MAAOiD,KAAKZ,MAAMrC,MAAOD,SAAUkD,KAAKZ,MAAMtC,kB,GA7DrDmD,aCFHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASC,eAAe,SAM1BsB,M","file":"static/js/main.67cc3f6c.chunk.js","sourcesContent":["const Navigation = () => {\n    return (\n        <nav style={{display: 'flex', justifyContent:'flex-end'}}>\n            <li className=\" f3 link dim black underline pa3 pointer\">Signout</li>\n        </nav>\n\n    )\n\n}\n\nexport default Navigation","export default __webpack_public_path__ + \"static/media/facesenselogo.30baf14e.png\";","\nimport Tilt from 'react-tilt'\nimport './Logo.css'\nimport face from './facesenselogo.png'\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 40 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\">\n                    <img style={{paddingTop: '5px'}} src={face} alt=\"logo\"/>\n                </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo","import React from 'react'\n\nconst ImageInputForm = ({ onInputChange, onBtnSubmit}) => {\n  return (\n    <div>\n      <div className=\"shadow-5 pa4 grow w-70\" style={{marginRight: \"auto\", marginLeft: \"auto\"}}>\n        <p className=\"f3 white\">\n          {\"Facesense detects faces in your pictures. Feel free to try!\"}\n        </p>\n        <p className=\"i white\">Copy and paste this image into the form to make it easier: <br/>\n        https://bit.ly/2Kzax6h\n         </p>\n\n        <div className=\"centered\">\n          <div className=\"pa-4 br3 centered shadow-5\">\n            <input onChange={onInputChange} \n              className=\"f4 pa2 w-70 centered\" \n              type=\"search\"\n              placeholder=\"image url here\"\n\n            />\n            <button \n            onClick={onBtnSubmit}\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\">Detect</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ImageInputForm","const Rank = () => {\n  return (\n    <div>\n    <h4 className=\"white f1 mt0 mb0\">{\"facesense\"} </h4> \n      <div className=\"white f3 mt2\">\n        {'James, your current rank is...'}\n      </div>\n      <h1 className=\"white f2 mb0\">\n        {'#5'}\n      </h1>\n    </div>\n  )\n\n\n}\n\nexport default Rank","import './FaceRecognition.css'\n\nconst FaceRecognition = ({imageUrl, boxes}) => {\nconsole.log(boxes)\n  return (\n    <div className=\"centered\">\n    \n    <div className=\"absolute mt0\">\n      \n      <img src={imageUrl} id=\"inputImage\" alt=\"\" width=\"400px\" height=\"auto\"/> \n      {boxes.map((box, idx) => {\n        return <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\n        <span className=\"white b\">{idx + 1}</span></div>\n      })\n      }\n\n    </div>\n \n    </div>\n  )\n}\n\nexport default FaceRecognition","import React, {Component} from 'react'\nimport Particles from 'react-particles-js'\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport ImageInputForm from './components/ImageInputForm/ImageInputForm'\nimport Rank from './components/Rank/Rank'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Clarifai from 'clarifai'\n\nconst app = new Clarifai.App({\n  apiKey: 'e565fc75ab9f4e1fa80c551dec437ff4'\n });\n\nclass App extends Component {\n  constructor(){\n    super()\n    // initialize state\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [],\n    }\n  }\n\n  generateFaceLocation = (data) => {\n    console.log(data)\n    const clarifaiFaces = data.outputs[0].data.regions.map(ele => {\n      return (this.calculateFaceBox(ele.region_info.bounding_box))\n      \n    })\n    return clarifaiFaces\n  } \n\n  calculateFaceBox = (box) => {\n    const image = document.getElementById('inputImage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n      return {\n        leftCol: box.left_col * width,\n        topRow: box.top_row * height,\n        rightCol: width - (box.right_col * width),\n        bottomRow: height - (box.bottom_row * height)\n      }\n  }\n\n  displayFaceBoxes = (boxes) => {\n    this.setState({boxes: boxes}) //set state with one or more boxes\n    console.log(this.state)\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value})  // runs this function on each change of the input\n  }\n\n  onBtnSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    // console.log(this.state)\n  \n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBoxes(this.generateFaceLocation(response))\n      .catch(err => console.log(err))\n    );\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\"> \n      <Particles className=\"background\" />\n\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageInputForm onInputChange={this.onInputChange} onBtnSubmit={this.onBtnSubmit}/>\n        <FaceRecognition boxes={this.state.boxes} imageUrl={this.state.imageUrl}/>\n      \n\n      </div>\n    )\n  }\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}